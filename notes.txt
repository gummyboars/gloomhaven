[Gloomhaven]
ControlsSettings is a GameObject with a list of KeyActionControlButton
KeyActionControlButton gets its Init() called when ControlsSettings has its Initialize() called
the list of KeyActionControlButtons is built from all child objects of that type
unclear where these buttons get created

[Script.GUI.SMNavigation.States.MainMenuStates]
ControlsSettingsState is a subclass of MainMenuState
MainMenuState is a subclass of NavigationState<MainStateTag>
it looks like these don't do anything other than set the nav root

[none]
UIOptionsWindow is a singleton class
- contains a GLOOM.MainMenu.UISubmenuGOWindow
- contains a list of OptionTab
- contains a number of UIMainMenuOption (e.g. difficulty, display, house rules)
- the OnShow() determines which submenus are active
UIMainMenuOption is a subclass of UIMenuOptionToggle
UIMenuOptionToggle is a subclass of UIMenuOption. it has listeners for mouseenter/ontoggle
UIMenuOption is a subclass of MonoBehavior. it has some animation stuff.

[GLOOM.MainMenu]
UISubmenuGOWindow is a MonoBehavior and IShowActivity
- Show() will set the base GameObject to active
MainOptionOptions is a subclass of MainOption that touches UIOptionsWindow
MainOption is a MonoBehavior
UIMainOptionsMenu is a MonoBehavior
- contains a UIMainMenuSubptionsPanel
- contains buttons of type MainOptionOpenSuboptions and MainOption
- contains a list of UIMainMenuOption
- when Start is called, it calls InitializeOption on each of its buttons
- InitializeOption calls Show with MainOptionOpenSuboptions.BuildOptions()
UIMainMenuSubptionsPanel is a MonoBehavior
- contains a UIMainMenuSuboption prefab
- contains a UIMainMenuSuboption pool optionsPool
- contains a scrollRect optionsScroll
- calling Show with a list of MenuSuboption
--- collects MenuSuboption and UIMainMenuSuboption entries
--- calls Init on the UIMainMenuSuboption items
UIMainMenuSuboption is a subclass of UIMainMenuOption
MainOptionOpenSuboptions is an abstract Monobehavior (subclasses: extras, gameMode, sandbox)

[Script.GUI.SMNavigation]
UIStateSwitcher sets the OnShow of its activityElement to Combine(original, UIStateSwitcher.OnShow)
UIStateSwitcher.OnShow calls StateMachine.Enter(enteringTag)
MainMenuStateSwitcher is a UIStateSwitcher<MainStateTag, UIWindow>

[Script.GUI.SMNavigation.States.MainMenuStates]
ControlsSettingsState has
- StateTag == MainStateTag.ControlsSettings
- RootName == ControlsSettings
- Enter just calls base.Enter
MainMenuState
- Enter will call SetCurrentRoot on the UiNavigationManager

[SM.Gamepad]
UiNavigationManager is a class
SetCurrentRoot(rootname) will
- find the navigation root by name
- set _currentRoot
HotkeyContainer is a MonoBehavior - but unrelated to what we're doing

======================================================================

[none]
GHControls defines PlayerAction and GHAction types, which have a OnPressed and OnValueChanged callback
ControlBindings has a MapBindingsToPlayerControls. it calls AddBinding on the PlayerActions
InputManager is a singleton that contains a GHControls
- Awake() will call InitialiseInControlGHControls() to initialise it with defaults
- SetKey() will set a key to a specific action
- RegisterToOnPressed() will associate a callback with a specific KeyAction
KeyActionHandlerController is a singleton that contains a list of KeyActionHandler objects
- AddHandler will add a KeyActionHandler to the list
KeyActionHandler
- has a KeyAction and an Action callback
- has one or more blockers IKeyActionHandlerBlocker
- the Action is set by the constructor
- it will call RegisterToOnPressed() if all blockers are cleared (and unregister if blockers are added)

Choreographer is a 15000 line class that is a MonoBehavior
- this is the state machine for playing a scenario
- it is not a singleton, but does have a static s_Choreographer
- it contains all the game objects like the ReadyButton, UndoButton, etc
- it has a ScenarioRuleLibrary.ScenarioState m_CurrentState
- Awake()
  - sets s_Choreographer
  - calls ScenarioRuleClient.SetMessageHandler(this->MessageHandler)
  - adds the OnGameSpeedChanged callback to the GlobalData
  - adds the SwitchSkipAndUndoButtons callback to the GlobalData
- Play() will call UnityGameEditorRuntime.LoadScenario()
- when moving to the next round, disables input, updates state machine, then enables input
- OnSceneLoadedCallback will disable input
- OnSceneLoadedCallbackContinued will enable input
- EndGameCoroutine will enable input
- OnDestroy will enable input


AddHandler may be called from anywhere - e.g. from CardsHandManager.Awake()
SpeedUpButton is a MonoBehavior that calls InputManager.RegisterToOnPressed with an action and a callback

[Script.GUI.SMNavigation.States.ScenarioStates]
RoundStartScenarioState
- Enter will call InitializeInput
- InitializeInput will call SubscribeInput
- SubscribeInput will call AddHandler on the KeyActionHandlerController

[InControl]
PlayerAction objects are in a set, and can be saved/loaded from a stream
